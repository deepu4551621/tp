require('dotenv').config();
const express = require('express');
const cors =require('cors')
// const bcrypt = require('bcrypt');
const cookieParser = require('cookie-parser')
const connectDB = require('./database/connect');
// const authenticate = require('./middleware/authenticate')
// const verifyToken =require('./middleware/verifyToken')
// const User = require('./modal/userModal');
const app = express();
const PORT = process.env.PORT || 5000;
// const jwt = require('jsonwebtoken')
// const ac_secretkey = process.env.AC_SECRET_KEY;
// app.use(cors({
//     origin: 'http://localhost:3000',
//     credentials:true
// }));
app.use(express.json());
app.use(cookieParser())

// app.post('/signup', async (req, res) => {
//     try {
//         const {name, email, password}=req.body;
//         // Create user document
//         // const hashedPassword = await bcrypt.hash(password, 10);
//         // console.log('hashedPassword',hashedPassword);
        
//         await User.create({name, email, password})
//         .then(()=>{
//             // 201 Created	The request has been fulfilled, and a new resource is created 
//             res.status(201).json({ success: true, message: 'User data added successfully' });
//         })
//     } catch (error) {
//         console.error('Error creating user:', error);
//         // Check for duplicate key error (MongoError 11000)
//         if (error.code === 11000) {
//             return res.status(400).json({ error: 'Email already exists' });
//         }
//         res.status(500).json({ error: 'Internal server error' });
//     }
// });
app.get('/', (req,res)=>{
    // const token= req.cookies;
    // console.log('hometoken',token)
    
})
app.post('/login', (req,res)=>{
    // const token= req.cookies
//    res.json({message:"logged in",})
})
app.get('/dashboard',  (req, res) => {
    // Access the user object from the request, if needed
    // const user = req.user;
    // const token= req.cookies
    // res.json({tokendash:token})
    // res.json({valid:true,  message: 'Welcome to the dashboard!', user });
});

connectDB().then(() => {
    app.listen(PORT, () => {
        console.log(`Server is running on port ${PORT}...`);
    });
});
